name: Security Advisory Check

on:
  schedule:
    - cron: "0 8 * * 1" # Weekly on Mondays at 8 AM UTC
  workflow_dispatch: # Allow manual triggering

jobs:
  check-advisories:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Check for security advisories
        run: |
          # Get repository information
          REPO="${{ github.repository }}"
          OWNER="${{ github.repository_owner }}"

          # Check if there are any open security advisories
          ADVISORIES=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/$REPO/security-advisories" | \
            jq -r '.[] | select(.state == "published") | .ghsa_id' | wc -l)

          if [ "$ADVISORIES" -gt 0 ]; then
            echo "Found $ADVISORIES published security advisories"
            echo "advisories_found=true" >> $GITHUB_ENV
          else
            echo "No published security advisories found"
            echo "advisories_found=false" >> $GITHUB_ENV
          fi

      - name: Create security reminder issue
        if: env.advisories_found == 'true'
        run: |
          # Check if an issue already exists to avoid duplicates
          EXISTING_ISSUE=$(gh issue list --label "security,automated" --state open --json number,title --jq '.[] | select(.title | contains("Security Advisories Review")) | .number' || echo "")

          if [ -z "$EXISTING_ISSUE" ]; then
            echo "Creating new security advisory review issue..."

            # Get advisory details for the issue body
            ADVISORY_DETAILS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/security-advisories" | \
              jq -r '.[] | select(.state == "published") | "- **\(.summary)** (GHSA-\(.ghsa_id)) - \(.severity)"' | head -5)

            # Create the issue with a simple body
            gh issue create \
              --title "ðŸ”’ Security Advisories Review Required" \
              --body "Security advisories detected in this repository. Please review them in the Security tab and update dependencies as needed." \
              --label "security,automated,high-priority"
          else
            echo "Security advisory review issue already exists (#$EXISTING_ISSUE)"
          fi
